[{"content":"Google Analytics Followed Hugo documents, I\u0026rsquo;d like to implement some extra features on my blog site such as GA. Here are description about GA:\n Google Analytics lets you measure your advertising ROI as well as track your Flash, video, and social networking sites and applications.\n Registration Google for Google Analytics，login in using personal google account1. Add an user then create an application of website, it would generate a tracking id after choose data stream. GA also provide some javascript code adding at the excatly \u0026lt;head\u0026gt; tag of website to achieve analytics. It sounds terrible to add js code on each page of a website, fortunately, Hugo provide an internal template for GA. What I need to do is only to add a {{ template \u0026quot;_internal/google_analytics_async.html\u0026quot; . }} shortcode at custom head file and provide tracking id in configuration file. Remarkably, I choose a asynchronous version, which might have a better performance, at least I hope so.\nAnalytics It looks like GA has been an integrated marketing platform, however, I gravitate toward feature of visitor statistics such as visitors' numbers2 and locations.\nexample: \rgoogle analytic map\r\nSEO During learning website technology, I gradually recognized the importance of SEO. Hugo or theme provides a default sitemap.xml file. In principle, search engines like Google behave like a spider but it won\u0026rsquo;t go inside a deep hierarchy. Sitemap create a more flatten structure of the whole website consequently a better SEO performance.\nGoogle Search Console Google Search Console:\n Google Search Central, formerly Google Webmasters, is here to help the right people view your content with resources to make your website discoverable to Google Search.\n It\u0026rsquo;s easy to verify website ownership using method Google Analytics on that page. Next, log in Google Search Console, after validate web information it will generate a txt token. Switching to DNS provider, add a txt type DNS record whose value must be the token above. Besides, server name can be @, might other names are also valid?\nIn site map index, sitemap can be provided by an URL, of course the sitemap.xml path for my site.\nWords in the End In fact, as a personal tech blog, SEO seems not indispensable, maybe I\u0026rsquo;m so idle at home?\nnext plan:\n baidu SEO indexes catalog words statistic    thats what called ecology? \u0026#x21a9;\u0026#xfe0e;\n a sadly news, it seems no one browse this website except myself. \u0026#x21a9;\u0026#xfe0e;\n   ","date":"2021-02-05T00:00:00Z","permalink":"https://www.gagua.xyz/p/google-analytics-and-seo/","title":"Google Analytics And SEO"},{"content":"\r\r\r可圈可点 原神，本来以为开放世界探索和氪金抽卡内核的冲突会导致游戏体验撕裂，结果成绩居然意料之外的不错。不过也没办法，毕竟原神作为一款手游可以说对其他游戏是降维打击。因为时间的缘故没法继续玩原神，不过消息还是一直在关注。新角色甘雨的PV实在是太完美了，miHoYo不只是美工，连音乐也是神啊！BGM是璃月战斗曲的变奏，与PV画面可以说相当的契合，急促轻缓的节奏变化非常吸引人，不懂如何用专业术语评价，总之就是好听就完事了！甘雨老婆！\n","date":"2021-01-22T00:00:00Z","permalink":"https://www.gagua.xyz/p/index.zh-cn/","title":"甘雨：梦里韶光"},{"content":"Shiny 最近导师觉得找我要图太麻烦了，就让我弄一个网页版的工具来进行可视化。虽然这事之前确实没做过，不过对Shiny还算有所耳闻，初步想了一下，感觉不算什么太难的事情，就答应了1。\nShiny也算是Rstudio强推的一个通过R构建交互式网页的工具，不得不感慨一下Rstudio为R的社区生态做出的卓越贡献。Shiny教学看起来还挺完善的，视频版的教学据说内容更丰富，不过说实话这连个自动字幕都没有，就纯练英语听力，实在是太为难我了，果断选择Written版。初学者的教学就7章，花了大概两个小时看完了，顺便跟着做了点练习，教学只提炼出了最基础的部分，不过也覆盖了生成一个完整的网页APP需要的部分，循序渐进好上手，有R的基础整这个还是挺方便的。\nDeploy 本来想放在自己的服务器的，不过想到我服务器可怜的体量，还是别再开一个web server了。而且，shinyapps可以再Rstudio IDE中自动推送啥的，还不用再去github上整个仓库，感觉自家的工具链是真的爽，难怪有这么多人喜欢用苹果，用的不是手机，而是生态啊。\nmy Shiny app不过感觉在用户体验方面还是有点点小问题，初次打开太慢了，这个也确实没办法，毕竟shiny启动需要加载一堆R包，还得加载数据，而且感觉这种网页不方便进行CDN。麻烦的在于，免费版的shinyapp服务每个月只有25小时的活跃(active)时间，也就是，当一段时间无人访问时，服务器会自动进入休眠状态，那再打开网页，就又相当于一次服务重启，相当耗时。如果有思路却要等网页加载，总感觉有点耽误科研效率，嘛，反正我也有本地数据，如果实在觉得性能不行，那就去申请经费整个会员吧。\nR workflow 想想最近的分析工作，大概就是：\n 数据挖掘2 在linux服务器上完成对性能需求较大的mapping, counting等步骤。这步通过基于python编写的snakemake完成了流程大体上的自动化。以后最好加个multiqc完成质量控制的可视化。 可视化。在本地服务器上利用R完成数据挖掘和可视化，Rstudio是真的好用，就是字体有点难受，不好区分大小写，视觉上感觉还是更喜欢vscode。之前一直是用Rscript完成分析，这次换成是Rmarkdown。其实本质上没有区别，不过Rmarkdown可以自动生成pptx等展示文档，避免了汇报工作时还得手动插图片的尴尬3。 分享交互。用网页应用进行分享交互可能是最流行的方式了。这里采用Shiny，毕竟基于R，减少了学习成本，部署构建都挺快的，现在也还能满足需求。  通过这样一个R-\u0026gt;Rmarkdown-\u0026gt;Shiny的工作流，大体上实现了数据分析工作的自动化，最后的结果看起来也挺美观的。在这里再次感谢R的开源社区提供的强大工具，使得我甚至还有时间在这写blog。然而，还是存在平台的割裂，没有完全实现自动化。如果能把2、3步也放在远程服务器上解决就好了。这里存在的问题就是没钱4，好吧，如果能购买Rstudio的社区版就好了。这样就可以通过snakemake继续调用R脚本，打包成一个完整的流程，不过以后这流程也不一定能再走一遍了。还好，snakemake似乎支持模块化，下次把流程优化重构成一个个单独的模组吧。如果能实现，就可以避免下载文件等一堆繁琐的事情了，也不用非得待在实验室，真好啊真好啊😉。\n  朕意已决？ \u0026#x21a9;\u0026#xfe0e;\n markdown怎么实现description list呀？ \u0026#x21a9;\u0026#xfe0e;\n 就是感觉对ppt的支持还不够完整，当然很大可能是我太菜了。 \u0026#x21a9;\u0026#xfe0e;\n 人唯一的病就是穷病？ \u0026#x21a9;\u0026#xfe0e;\n   ","date":"2021-01-19T00:00:00Z","permalink":"https://www.gagua.xyz/p/integrated-r-workflow/","title":"Integrated R Workflow"},{"content":"Purpose I need to build a webserver using nodejs which listens to a certain port. Besides, writing a simple shell script to implement auto pull is necessary. It\u0026rsquo;s vital to find a approach which is able to parse a json content and execute shell scripts. Considering latent security problem, enable SSL verification and setting secret token is recommended.\ninstall nodejs I first tried conda search node then find the version of nodejs in conda repository is not the latest version. However, nodejs is similar to python that has a active community, and the version iteration of nodejs is frequent. So using a Node version manager like nvm to install Node.js and npm is strongly recommend.\nwget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash To verify that nvm has been installed, do:\ncommand -v nvm To download, compile, and install the latest release of node, do this:\nnvm install node # \u0026#34;node\u0026#34; is an alias for the latest version To install a specific version of node:\nnvm install 6.14.4 # or 10.10.0, 8.9.1, etc then check out version of node and npm:\nnpm -v node -v github-webhook-handler All fundamental preparation is finished, install a small handle github-webhook-handler that help with listening for a POST request at certain port.\nnpm i github-webhook-handler following the example on that document, I set a .js script which create a server listening for event and execute shell script setted previously.\nvar http = require(\u0026#39;http\u0026#39;) var exec = require(\u0026#39;child_process\u0026#39;).exec var createHandler = require(\u0026#39;github-webhook-handler\u0026#39;) var handler = createHandler({ path: \u0026#39;$payload/url\u0026#39;, secret: \u0026#39;myxxxxx\u0026#39; })// confirm your path and secret are consistent with those setting on github webserver page.  http.createServer(function (req, res) { handler(req, res, function (err) { res.statusCode = 404 res.end(\u0026#39;no such location\u0026#39;) }) }).listen($port) handler.on(\u0026#39;push\u0026#39;, function (event) { let currentTime = new Date(); console.log(\u0026#39;\\n--\u0026gt; \u0026#39; + currentTime.toLocaleString()); console.log(\u0026#39;Received a push event for %s to %s\u0026#39;, event.payload.repository.name, event.payload.ref); exec(\u0026#39;sh $path/to/sh\u0026#39;, function (error, stdout, stderr) {//execute shell script  if(error) { console.error(\u0026#39;error:\\n\u0026#39; + error); return; } console.log(\u0026#39;stdout:\\n\u0026#39; + stdout); console.log(\u0026#39;stderr:\\n\u0026#39; + stderr); }); }) using npm install pm2 then call pm2 start .js and pm2 startup directives to keep script lauched.\nnginx reverse proxy Nodejs lauched sebserver at certain port but reversed proxy to 80 port is convenient for using webhook. rewrite nginx configuration file as followed\nlocation /$payload { alias $path/to/js; proxy_pass https://$ip:$port; } open github webhook page and click redeliver, but the same error status code 502 popped up again, it\u0026rsquo;s a little frustrating. Then I scaned the latest nginx error code, finding something different:\nSSL_do_handshake() failed (SSL: error:1408F10B:SSL routines:ssl3_get_record:wrong version number) I\u0026rsquo;m definitely a google oriented programmer. By google I find some possible solutions, one is that reversed proxy don\u0026rsquo;t need HTTPS, so just fix proxy_pass https://$ip:$port; as proxy_pass http://$ip:$port; then webhook would work well {\u0026quot;ok\u0026quot;:true}. However, I didn\u0026rsquo;t figure out the reason absolutely, maybe there is no SSL requirement for reversed proxy inside the same host, or nodejs script lauched a server using http protocol.\n waitting for complete solution  ","date":"2021-01-08T00:00:00Z","permalink":"https://www.gagua.xyz/p/auto-pull-using-webhook-and-nodejs/","title":"Auto Pull Using Webhook And Nodejs"},{"content":"\rDeployment\r网站如果只运行在local host那还叫啥网站啊，如果部署在一个具有公网ip的服务器，这样就能实现让几乎所有人都能通过浏览器访问自己的网站。blogdown文档中提供了多种部署方案，但在这里选择部署至一台自己的vps上。\n此时需要:\r\r能通过互联网访问的主机（host）一台\r网站（博客）的文件\rclient——浏览器\rserver——webServer\r\r云计算，大数据如此火热的现在，主机现在显然不是问题。博客文件已经通过blogdown生成，浏览器也成为了大部分人的应用，接下来就只剩下webServer的问题了。\n\r\rWebServer\rWebServer可以解析HTTP，响应(response)一个请求(request)，通常都是返回一个html文件来让浏览器进行浏览。在这里我选用的是nginx，一款主要由Igor Sysoev在业余时间开发的HTTP和反向代理的服务器。当然还有其他功能，不过我暂时用上的就只有这两个。webserver当然由很多，如Apache等，甚至可以用python等自己实现一个，但是为什么我会选择nginx？主要是因为nginx内存占用小，并发高（这一点对于我暂时没有什么用处），有着优秀的静态处理性能（关键）。这对于私人博客这样一个静态网站来说，是完美的选择。\ninstall nginx\rnginx可以通过源码安装，但是在linux上想到的，果然还是yum优先。抱歉，由权限是真的可以为所欲为。\nyum install nginx\r......\rno package nginx available\r？居然显示仓库中没有nginx，怎么可能？很好，我选择万能的conda。\r安装好miniconda之后，conda search nginx，果然有，完成下载。在浏览器访问主机的ip地址，出现以下的界面：\nnginx 安装成功\n\r注意，conda 安装的nginx将根目录设置的是conda所在目录。\ngit clone xxx.git\r从远程仓库git clone得到静态网页项目文件，之后的就是设置nginx的配置文件了。\rnginx -t直接找到配置文件位置\n# nginx -t\rnginx: the configuration file $path/to/conf/file syntax is ok\rnginx: configuration file $path/to/conf/file test is successful\rvi $path/to/conf/file\r.\r.\r.\rinclude sites.d/*.conf;\rnginx将sites.d/*.conf中的所有文件包含在了配置文件中。在sites.d/下新建一个.conf文件，\nserver {\rlisten 80;\rserver_name localhost;\r#charset koi8-r;\r#access_log logs/host.access.log main;\rlocation / {\rroot html;\rindex index.html index.htm;\r}\r#error_page 404 /404.html;\r# redirect server error pages to the static page /50x.html\r#\rerror_page 500 502 503 504 /50x.html;\rlocation = /50x.html {\rroot html;\r}\r假设网页文件夹的绝对路径为$abl，主机ip为$ip修改\nserver {\rlisten 80;\rserver_name $ip;\r#charset koi8-r;\r#access_log logs/host.access.log main;\rlocation / {\rroot $abl;\rindex index.html index.htm;\r}\r#error_page 404 /404.html;\r# redirect server error pages to the static page /50x.html\r#\rerror_page 500 502 503 504 /50x.html;\rlocation = /50x.html {\rroot html;\r}\r尝试浏览器访问ip，结果发现403 Forbidden，这个是跟权限有关的状态码。啊这不对劲，难道是conda安装的nginx有问题吗？就想尝试以下系统安装的方法。\n之后google一下发现yum无法安装的原因是nginx位于第三方的yum源里面，而不在centos官方yum源里。\r那就安装EPEL源好了。\nyum install epel-release\ryum update\ryum install -y nginx\r应该就可以完成nginx安装了。不过这样会导致，存在两个nginx进程，后面导致监控work process端口出现了一点点麻烦，干脆把yum安装的nginx删除（conda永远滴神！）。\n继续访问ip，居然还是403。喵喵喵？百度一下，发现是由于nginx用户和登录用户不一致导致的问题。\nvi $path/to/conf/file\r...\r# Run as a unique, less privileged user for security.\ruser nobody www-data; ## Default: nobody\r修改用户(user)和用户组(user group)后，重启nginxnginx -s reload就能通过ip访问。看到网站成功打开还蛮开心的，就像成功把积木玩具拼装好一样。\n\rdomain name and https\rip难以记忆，也不够cooooool，那必须得采用域名来进行访问。域名很便宜，很多地方都可以购买，烂大街的玩意，不过好的域名还真难找，gagua.com——市场营销精品店公司,gagua.cn(这个貌似有，不过还是想要个.com域名啊啊啊)。这还是，第一次发现gagua这名字，都会有人取呢。最后，还是选了个.xyz域名，虽然可能存在SEO之类的问题，不过对于我这样一个个人博客来说，应该无所谓了。\n\r其实我还不懂为什么域名还能收费，等以后的答案吧\r不知道能不能自己实现DNS解析服务\rwww和@，CNAME\r\r在域名解析服务商解决DNS解析问题，相当于做一个域名到ip的映射，之后就是添加A记录不过这个也不是很懂，以后再看看吧。\r这一步需要等待一些时间。\nDNS解析成功后，修改server_name为域名\nserver {\rlisten 80;\rserver_name domain_name;\r然后就可以尝试通过域名访问啦。可惜在浏览器无论是输入domain_name http://domain_name 还是 http://domain_name:80 都无法成功，无法找到服务器。而后，我突然意识到，pc端的谷歌浏览器默认使用https，而nginx只监听了80端口。于是乎又将配置文件修改为443，即https的默认端口。\r此时需要确保端口打开firewall-cmd --zone=public --add-port=443/tcp --permanent\n满怀希望。\n结果却是：ERR_SSL_PROTOCOL_ERROR。搜索了一下错误码，发现是因为没有配置ssl协议。\nhttps\rhttps通过加入TLS/SSL协议在HTTP的基础上通过传输加密和身份认证保证了传输过程的安全性。\nSSL证书申请\rDNSPod可以直接申请CA证书。不得不说，腾讯还是会做点好事的，免费证书真香，还能自动添加解析记录。一键生成，下载证书后会得到一个与webserver相关的.crt证书文件和.key私钥文件。貌似好像可以自动生成证书，以后研究一下原理。\n\rSSL证书部署\r感谢腾讯云的悉心指导\nserver {\r#SSL 访问端口号为 443\rlisten 443 ssl; #填写绑定证书的域名\rserver_name cloud.tencent.com; #证书文件名称\rssl_certificate 1_cloud.tencent.com_bundle.crt; #私钥文件名称\rssl_certificate_key 2_cloud.tencent.com.key; ssl_session_timeout 5m;\r#请按照以下协议配置\rssl_protocols TLSv1 TLSv1.1 TLSv1.2; #请按照以下套件配置，配置加密套件，写法遵循 openssl 标准。\rssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; ssl_prefer_server_ciphers on;\rlocation / {\r#网站主页路径。此路径仅供参考，具体请您按照实际目录操作。\rroot html; index index.html index.htm;\r}\r}\r而后还可以将HTTP 请求自动重定向到 HTTPS\nserver {\rlisten 443 ssl;\r#填写绑定证书的域名\rserver_name cloud.tencent.com; #证书文件名称\rssl_certificate 1_cloud.tencent.com_bundle.crt; #私钥文件名称\rssl_certificate_key 2_cloud.tencent.com.key; ssl_session_timeout 5m;\rssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\rssl_protocols TLSv1 TLSv1.1 TLSv1.2;\rssl_prefer_server_ciphers on;\rlocation / {\r#网站主页路径。此路径仅供参考，具体请您按照实际目录操作。 root html;\rindex index.html index.htm;\r}\r}\rserver {\rlisten 80;\r#填写绑定证书的域名\rserver_name cloud.tencent.com; #把http的域名请求转成https\rreturn 301 https://$host$request_uri; }\r此后就可通过https://domain_name访问。完美！\n就此，网站部署工作已经大体上完成。在git pull时，我突然又懒癌发作。一定有，自动pull的方法吧？虽然ssh登录顺便输个命令并不算多大的工作量，不过这理应是计算机该做的事情吧？！\n\r\r\r\rwebhook\rgithook\r首先看到的是githook，提供自定义的脚本，在特定的动作发生后就会执行脚本。提供了client-side和server-side脚本，不过这个好像和我想要的server-web_server有点不同，代表的可能是远程仓库的server。\n其实也可以通过在client-side的脚本中设置commit触发ssh链接加git pull，不过总感觉这样的实现不够优雅，而且越过了远程仓库，总感觉会导致一些意料之外的问题。\n\rgithub webhook\rgithub为每个仓库提供了webhook，github webhook与githook类似，都是响应动作(response action)。在仓库的setting中可以找到webhook设定，其中必须要添加的是Payload URL，webhook会在动作触发后向URL发送一个称为Payload的POST请求(request)，请求体(request body)为json，触发动作和发送的文件内容当然也能选择，详情见文档。\n当然，这只是发送了一个POST request，当时的我天真的以为在URL的文件夹下添加git pull的.sh文件就可以实现自动化。\r结果当然是，翻车了。\n\u0026lt;html\u0026gt;\r\u0026lt;head\u0026gt;\u0026lt;title\u0026gt;405 Not Allowed\u0026lt;/title\u0026gt;\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;center\u0026gt;\u0026lt;h1\u0026gt;405 Not Allowed\u0026lt;/h1\u0026gt;\u0026lt;/center\u0026gt;\r\u0026lt;hr\u0026gt;\u0026lt;center\u0026gt;nginx\u0026lt;/center\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r405\r\r请求行中指定的请求方法不能被用于请求相应的资源。该响应必须返回一个Allow 头信息用以表示出当前资源能够接受的请求方法的列表。鉴于 PUT，DELETE 方法会对服务器上的资源进行写操作，因而绝大部分的网页服务器都不支持或者在默认配置下不允许上述请求方法，对于此类请求均会返回405错误。\n\rnginx作为webserver，不允许静态文件响应POST请求，因此会返回405错误。\n在网上找了nginx不响应POST请求的解决方法，不过按结果来看：\n\u0026lt;html\u0026gt;\r\u0026lt;head\u0026gt;\u0026lt;title\u0026gt;502 Bad Gateway\u0026lt;/title\u0026gt;\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;center\u0026gt;\u0026lt;h1\u0026gt;502 Bad Gateway\u0026lt;/h1\u0026gt;\u0026lt;/center\u0026gt;\r\u0026lt;hr\u0026gt;\u0026lt;center\u0026gt;nginx\u0026lt;/center\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r查看错误记录发现connect() failed (111: Connection refused) while connecting to upstream，上游是一个.sh文件，怎么可能进行连接。\r能response to POST request的，只能是(可以是)webserver， 既然现在所用的nginx不允许静态文件响应请求，那就只能再建立一个服务器监听特定端口，大多数现有的方案都是通过PHP来解决，不过我对这门语言实在是不太熟悉，最后还是选择了，Nodejs\n\r\r\r","date":"2021-01-07T00:00:00Z","permalink":"https://www.gagua.xyz/p/deploy-a-static-blog-site/","title":"Deploy A Static Blog Site"},{"content":"\r缘起\rBlogdown是由Yihui Xie基于Hugo编写的一个R包，用于便捷地进行静态网站的构建。由于Yihui大神和RStudio团队的不懈努力，一个充满活力的R语言社区得以构建。加上之前偶然尝试了Yihui的另一个R包Rmarkdown，不由惊为天人。恰巧最近也学了点web相关的知识，html,css,native js等等，于是就产生了构建一个博客的想法，顺便也能记录一些在探索中遇到的技术问题，分享数据可视化的一些美图，实践《计算机网络，自顶而下方法》，《深入理解计算机系统》。\n\r选型\rBlogdown下载直接install.packages()，在比较新版本的RStudio IDE中，New Project中可以直接选择website using blogdown，RStudio会自动下载新版本的Hugo，在此也能选择主题(theme github)。在Hugo官网中纠结了很久，最后还是选了Stack作为我博客的主题，说实话第一眼还是配图吸引了我，果然人就是肤浅的视觉动物。分类、搜索、评论、无框架，在满足了我基本的需求之后，还能提供相对充裕的自定制空间。毕竟框架虽然强大，但却封装了技术细节，想弄懂又需要花费不少学习成本，好吧，懒癌晚期，if it works, don’t fix it?\n\rblogdown\r在这想稍微详细说一下blogdown。众所周知，hugo是一款以Go开发的强大的静态网站生成器，那为什么还要开发blogdown呢？很简单，因为hugo暂时还没有完成对.Rmd的支持，但rmarkdown直接在网页中同时包含代码和生成的结果实在是太香了（其实还有更多的功能，但我就是个视觉动物）。Yihui因此开发了blogdown（有技术真的可以为所欲为吗），实现了对.Rmd的解析渲染，并且能实现bookdown、rmarkdown的绝大部分特性（yihui怎么又是你，难道这就是推荐式算法吗，信息茧房恐怖如斯），加上Shiny应该可以实现交互式的页面应用，很可惜我暂时还不懂shiny咋用。这里又要吹一波RSstudio了，Addins提供了包括新增post和插入image等操作的快捷方式。\nblogdown addins\n\r（啊，为什么本地加载图片会失败啊，哦，原来是生成路径的问题，rmd要加入/post/）\n总之，blogdown:::serve_site()建立本地服务器用于预览，blogdown::build_site()后能得到一个默认为public的文件夹，里面就包含了博客所需要的所有文件。接下来就是github新建仓库, git commit, push remote一气呵成，很快啊。注意要在public文件夹建立仓库，因为建站所需的文件只有这些。\n\r","date":"2021-01-06T00:00:00Z","permalink":"https://www.gagua.xyz/p/establish-a-website-by-r-blogdown/","title":"Establish A Website With R Blogdown"},{"content":"正文测试 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。\n奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。\n引用  思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n 图片 \rPhoto by Florian Klauer on Unsplash\r \rPhoto by Luca Bravo on Unsplash\r\n\rPhoto by Helena Hertz on Unsplash\r \rPhoto by Hudai Gayiran on Unsplash\r\n![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2020-09-09T00:00:00Z","image":"https://www.gagua.xyz/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu45a5e3ad5e058da6a00650ed8fd40bea_15530_120x120_fill_q75_box_smart1.jpg","permalink":"https://www.gagua.xyz/p/test-chinese/","title":"Chinese Test"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Italics Bold Code     italics bold code    Code Blocks Code block with backticks \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Fruit  Apple Orange Banana   Dairy  Milk Cheese    Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  ","date":"2019-03-11T00:00:00Z","image":"https://www.gagua.xyz/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"https://www.gagua.xyz/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\n Exierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude  Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\n Comas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et  Vagus elidunt \nThe Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","image":"https://www.gagua.xyz/p/placeholder-text/matt-le-SJSpo9hQf7s-unsplash_hu958d513eeefe5556a31d065479ecc5ac_14205_120x120_fill_q75_box_smart1.jpg","permalink":"https://www.gagua.xyz/p/placeholder-text/","title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so:  {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }}  To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files  Note: Use the online reference of Supported TeX Functions\nExamples Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"2019-03-08T00:00:00Z","permalink":"https://www.gagua.xyz/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 🙈 🙉 🙉 🙊 🙊\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\n N.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n.emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; }","date":"2019-03-05T00:00:00Z","image":"https://www.gagua.xyz/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_huf941de4769045cdfa8c9ee7036519a2a_35369_120x120_fill_q75_box_smart1.jpg","permalink":"https://www.gagua.xyz/p/emoji-support/","title":"Emoji Support"},{"content":"\r\rR Markdown\rThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars)\r## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00\rfit \u0026lt;- lm(dist ~ speed, data = cars)\rfit\r## ## Call:\r## lm(formula = dist ~ speed, data = cars)\r## ## Coefficients:\r## (Intercept) speed ## -17.579 3.932\r\rIncluding Plots\rYou can also embed plots. See Figure 1 for example:\npar(mar = c(0, 1, 0, 1))\rpie(\rc(280, 60, 20),\rc(\u0026#39;Sky\u0026#39;, \u0026#39;Sunny side of pyramid\u0026#39;, \u0026#39;Shady side of pyramid\u0026#39;),\rcol = c(\u0026#39;#0292D8\u0026#39;, \u0026#39;#F7EA39\u0026#39;, \u0026#39;#C4B632\u0026#39;),\rinit.angle = -50, border = NA\r)\r\rFigure 1: A fancy pie chart.\r\r\r","date":"2015-07-23T21:13:14-05:00","permalink":"https://www.gagua.xyz/p/hello-r-markdown/","title":"Hello R Markdown"}]