<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vue on A Technical Blog</title>
    <link>https://www.gagua.xyz/tags/vue/</link>
    <description>Recent content in Vue on A Technical Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 12 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.gagua.xyz/tags/vue/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vue Router:The Front-End Routing </title>
      <link>https://www.gagua.xyz/p/vue-routerthe-front-end-routing/</link>
      <pubDate>Fri, 12 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.gagua.xyz/p/vue-routerthe-front-end-routing/</guid>
      <description>Router 最近在学习Vue这个前端框架1，看到Routing这一节时觉得很费解，不明白为什么要弄一套Vue router库。
我认为所谓路由，应该就是指URL跳转到对应的页面的一个映射方法。
Nginx 在nginx中可以通过配置文件来进行路由设定：
location /path/ {root xxx;index xxx.html;}通过正则匹配来进行路由映射。
既然已经有现成的路由方法了，为什么前端框架还是要自己弄一套新的路由方法呢？
Front-End Routing 查阅之后，发现有前端和后端路由的区别，博客园上的一篇文章 让我对此稍微有了一点了解。
总而言之，后端路由需要绑定methods，并且随着页面变得复杂，代码耦合性强，难以维护。前端路由应时而出，解决了页面切换白屏和可复用等问题，不过也使得SEO困难。
通过js渲染界面：
&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;&amp;lt;head&amp;gt;&amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt;&amp;lt;title&amp;gt;Vue&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;div id=&amp;quot;app&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;xxxx.xxx.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;yyyy.yyy.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;zzzz.zzz.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;前端路由有两种方式：
 Hash模式 History模式  Hash模式利用的是浏览器不会对#号后面的路径对服务端发起路由请求， 而History模式利用的是HTML5的History API，所以不能兼容低版本IE。
写在最后 从业经历不足半年在这还真是吃亏，古人说，以史为鉴可以知兴替。没有切身体会过前端的古早时代的我，难以理解一些新的概念。曾经的我2无法理解为什么要弄出Composition API，为什么会有IE的兼容问题，为什么要做状态管理，为什么要做前端路由。在ES6之前连模块导入这种概念都没有的Javascript是怎么成为浏览器运行时的事实标准的。
不过这个又回到了一个有点接近哲学的问题，没有亲身体验过，人能了解事物的本质吗？如果说只有实践才能出真知，那么，实践的方法到底有哪些？实践的风险与收益如何平衡？人的有穷和事物的无穷，又该如何选择？
  或者说Javascript库。 &amp;#x21a9;&amp;#xfe0e;
 也许现在我也只是以为我懂了。 &amp;#x21a9;&amp;#xfe0e;
   </description>
    </item>
    
  </channel>
</rss>
