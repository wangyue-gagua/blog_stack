<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on A Technical Blog</title>
    <link>https://www.gagua.xyz/post/</link>
    <description>Recent content in Posts on A Technical Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 08 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.gagua.xyz/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Auto Pull Using Webhook And Nodejs</title>
      <link>https://www.gagua.xyz/p/auto-pull-using-webhook-and-nodejs/</link>
      <pubDate>Fri, 08 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.gagua.xyz/p/auto-pull-using-webhook-and-nodejs/</guid>
      <description>Purpose I need to build a webserver using nodejs which listens to a certain port. Besides, writing a simple shell script to implement auto pull is necessary. It&amp;rsquo;s vital to find a approach which is able to parse a json content and execute shell scripts. Considering latent security problem, enable SSL verification and setting secret token is recommended.
install nodejs I first tried conda search node then find the version of nodejs in conda repository is not the latest version.</description>
    </item>
    
    <item>
      <title>Deploy A Static Blog Site</title>
      <link>https://www.gagua.xyz/p/deploy-a-static-blog-site/</link>
      <pubDate>Thu, 07 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.gagua.xyz/p/deploy-a-static-blog-site/</guid>
      <description>Deployment网站如果只运行在local host那还叫啥网站啊，如果部署在一个具有公网ip的服务器，这样就能实现让几乎所有人都能通过浏览器访问自己的网站。blogdown文档中提供了多种部署方案，但在这里选择部署至一台自己的vps上。
此时需要:能通过互联网访问的主机（host）一台网站（博客）的文件client——浏览器server——webServer云计算，大数据如此火热的现在，主机现在显然不是问题。博客文件已经通过blogdown生成，浏览器也成为了大部分人的应用，接下来就只剩下webServer的问题了。
WebServerWebServer可以解析HTTP，响应(response)一个请求(request)，通常都是返回一个html文件来让浏览器进行浏览。在这里我选用的是nginx，一款主要由Igor Sysoev在业余时间开发的HTTP和反向代理的服务器。当然还有其他功能，不过我暂时用上的就只有这两个。webserver当然由很多，如Apache等，甚至可以用python等自己实现一个，但是为什么我会选择nginx？主要是因为nginx内存占用小，并发高（这一点对于我暂时没有什么用处），有着优秀的静态处理性能（关键）。这对于私人博客这样一个静态网站来说，是完美的选择。
install nginxnginx可以通过源码安装，但是在linux上想到的，果然还是yum优先。抱歉，由权限是真的可以为所欲为。
yum install nginx......no package nginx available？居然显示仓库中没有nginx，怎么可能？很好，我选择万能的conda。安装好miniconda之后，conda search nginx，果然有，完成下载。在浏览器访问主机的ip地址，出现以下的界面：
nginx 安装成功
注意，conda 安装的nginx将根目录设置的是conda所在目录。
git clone xxx.git从远程仓库git clone得到静态网页项目文件，之后的就是设置nginx的配置文件了。nginx -t直接找到配置文件位置
# nginx -tnginx: the configuration file $path/to/conf/file syntax is oknginx: configuration file $path/to/conf/file test is successfulvi $path/to/conf/file...include sites.d/*.conf;nginx将sites.d/*.conf中的所有文件包含在了配置文件中。在sites.d/下新建一个.conf文件，</description>
    </item>
    
    <item>
      <title>Establish A Website With R Blogdown</title>
      <link>https://www.gagua.xyz/p/establish-a-website-by-r-blogdown/</link>
      <pubDate>Wed, 06 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.gagua.xyz/p/establish-a-website-by-r-blogdown/</guid>
      <description>缘起Blogdown是由Yihui Xie基于Hugo编写的一个R包，用于便捷地进行静态网站的构建。由于Yihui大神和RStudio团队的不懈努力，一个充满活力的R语言社区得以构建。加上之前偶然尝试了Yihui的另一个R包Rmarkdown，不由惊为天人。恰巧最近也学了点web相关的知识，html,css,native js等等，于是就产生了构建一个博客的想法，顺便也能记录一些在探索中遇到的技术问题，分享数据可视化的一些美图，实践《计算机网络，自顶而下方法》，《深入理解计算机系统》。
选型Blogdown下载直接install.packages()，在比较新版本的RStudio IDE中，New Project中可以直接选择website using blogdown，RStudio会自动下载新版本的Hugo，在此也能选择主题(theme github)。在Hugo官网中纠结了很久，最后还是选了Stack作为我博客的主题，说实话第一眼还是配图吸引了我，果然人就是肤浅的视觉动物。分类、搜索、评论、无框架，在满足了我基本的需求之后，还能提供相对充裕的自定制空间。毕竟框架虽然强大，但却封装了技术细节，想弄懂又需要花费不少学习成本，好吧，懒癌晚期，if it works, don’t fix it?
blogdown在这想稍微详细说一下blogdown。众所周知，hugo是一款以Go开发的强大的静态网站生成器，那为什么还要开发blogdown呢？很简单，因为hugo暂时还没有完成对.Rmd的支持，但rmarkdown直接在网页中同时包含代码和生成的结果实在是太香了（其实还有更多的功能，但我就是个视觉动物）。Yihui因此开发了blogdown（有技术真的可以为所欲为吗），实现了对.Rmd的解析渲染，并且能实现bookdown、rmarkdown的绝大部分特性（yihui怎么又是你，难道这就是推荐式算法吗，信息茧房恐怖如斯），加上Shiny应该可以实现交互式的页面应用，很可惜我暂时还不懂shiny咋用。这里又要吹一波RSstudio了，Addins提供了包括新增post和插入image等操作的快捷方式。
blogdown addins
（啊，为什么本地加载图片会失败啊，哦，原来是生成路径的问题，rmd要加入/post/）
总之，blogdown:::serve_site()建立本地服务器用于预览，blogdown::build_site()后能得到一个默认为public的文件夹，里面就包含了博客所需要的所有文件。接下来就是github新建仓库, git commit, push remote一气呵成，很快啊。注意要在public文件夹建立仓库，因为建站所需的文件只有这些。
</description>
    </item>
    
    <item>
      <title>testtt</title>
      <link>https://www.gagua.xyz/p/testtt/</link>
      <pubDate>Mon, 04 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.gagua.xyz/p/testtt/</guid>
      <description>library(tidyverse)## -- Attaching packages --------------------------------------- tidyverse 1.3.0 --## v ggplot2 3.3.3 v purrr 0.3.4## v tibble 3.0.4 v dplyr 1.0.2## v tidyr 1.1.2 v stringr 1.4.0## v readr 1.4.0 v forcats 0.5.0## -- Conflicts ------------------------------------------ tidyverse_conflicts() --## x dplyr::filter() masks stats::filter()## x dplyr::lag() masks stats::lag()mtcars %&amp;gt;% ggplot(aes(mpg,cyl))+geom_point()</description>
    </item>
    
    <item>
      <title>Chinese Test</title>
      <link>https://www.gagua.xyz/p/test-chinese/</link>
      <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.gagua.xyz/p/test-chinese/</guid>
      <description>正文测试 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。
奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。
引用  思念是最暖的忧伤像一双翅膀
让我停不了飞不远在过往游荡
不告而别的你 就算为了我着想
这么沉痛的呵护 我怎么能翱翔
最暖的憂傷 - 田馥甄
 图片  Photo by Florian Klauer on Unsplash   Photo by Luca Bravo on Unsplash</description>
    </item>
    
    <item>
      <title>Markdown Syntax Guide</title>
      <link>https://www.gagua.xyz/p/markdown-syntax-guide/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.gagua.xyz/p/markdown-syntax-guide/</guid>
      <description>&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Placeholder Text</title>
      <link>https://www.gagua.xyz/p/placeholder-text/</link>
      <pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.gagua.xyz/p/placeholder-text/</guid>
      <description>&lt;p&gt;Lorem est tota propiore conpellat pectoribus de pectora summo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Math Typesetting</title>
      <link>https://www.gagua.xyz/p/math-typesetting/</link>
      <pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.gagua.xyz/p/math-typesetting/</guid>
      <description>&lt;p&gt;Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Emoji Support</title>
      <link>https://www.gagua.xyz/p/emoji-support/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.gagua.xyz/p/emoji-support/</guid>
      <description>&lt;p&gt;Emoji can be enabled in a Hugo project in a number of ways.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
